sfGuardUserProfile:
  columns:
    avatar:             { type: string(255) }
    title:              { type: string(255) }
    user_cookie_id:     { type: string(255) }
    active:             { type: boolean, default: true }
  relations:
    sfGuardUser:        { onDelete: CASCADE, local: id, foreign: profile_id, foreignAlias: sfGuardUser, type: one }

ActivationCode:
  columns:
    user_id:            { type: integer, notnull: true, unique: true }
    code:               { type: string(255), notnull: true }
  relations:
    sfGuardUser:        { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: ActivationCode }

Language:
  columns:
    name:               { type: string(255), notnull: true }
    is_active:          { type: boolean, default: true }

Video:
  columns:
    title:              { type: string(255), notnull: true }
    description:        { type: text, notnull: true }
    file:               { type: string(255), notnull: true }
    date_upload:        { type: datetime, notnull: true }
    user_id:            { type: integer, unique: true }
    duration:           { type: integer }
    desc_file:          { type: string(255), notnull: false }
    is_active:          { type: boolean, default: false }
    is_converted:       { type: boolean, default: false }
    is_edit:            { type: boolean, default: false }
    status:             { type: enum(11), values:['in_progress', 'complete', 'convert'], default: 'in_progress' }
    is_scrinshot:      { type: boolean, default: false }
    category_id:        { type: integer }
  relations:
    sfGuardUser:        { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: sfGuardUser }
    Youtube:            { onDelete: CASCADE, local: id, foreign: video_id, foreignAlias: Youtube, type: one }
    Category:           { onDelete: CASCADE, local: category_id, foreign: id, foreignAlias: Category }
  actAs:
    Timestampable: ~
    Commentable:
    sfLuceneDoctrineTemplate: ~

Youtube:
  columns:
    title:              { type: string(255), notnull: true }
    description:        { type: text, notnull: true }
    link_youtube:       { type: string(255), notnull: true }
    active:             { type: boolean, default: false }
    download:           { type: boolean, default: false }
    is_edit:            { type: boolean, default: false }
    user_id:            { type: integer, unique: true }
    video_id:           { type: integer, unique: true }
  relations:
    sfGuardUser:        { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: sfGuardUser }
    Video:            { onDelete: CASCADE, local: video_id, foreign: id, foreignAlias: Video, type: one }
  actAs:
     Timestampable: ~

Scrinshot:
  columns:
    file:           { type: string(255), notnull: true }
    video_id:      { type: integer }
  relations:
     Video:          { onDelete: CASCADE, local: video_id, foreign: id, foreignAlias: Video }
  actAs:
     Timestampable: ~

Category:
  columns:
    title:              { type: string(255), notnull: true }
    description:        { type: text, notnull: true }
    parent_id:          { type: integer, default: 0, notnull: true }
  actAs:
    Timestampable: ~

VideoRating:
  columns:
    video_id:        { type: integer, notnull: true }
    rating:          { type: integer, notnull: true }
    user_cookie_id:  { type: string(255), notnull: true }
  relations:
    Video:           { onDelete: CASCADE, local: video_id, foreign: id, class: Video }
    Profile:         { onDelete: CASCADE, local: user_cookie_id, foreign: id, foreignAlias: sfGuardUserProfile }
  actAs:
    Timestampable: ~

VideoWatching:
  columns:
    video_id:          { type: integer, notnull: true }
    user_cookie_id:  { type: string(255), notnull: true }
  relations:
    Video:           { onDelete: CASCADE, local: video_id, foreign: id, class: Video }
    Profile:         { onDelete: CASCADE, local: user_cookie_id, foreign: id, foreignAlias: sfGuardUserProfile }
  actAs:
    Timestampable: ~

